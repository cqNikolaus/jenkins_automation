pipeline {
    agent {
        docker { 
            label 'agent-label-2'
            image 'python-build'
            args '-u root:root -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }
    environment {
        ZONE_NAME = "comquent.academy"
        SSH_KEY_NAME = 'clemens.nikolaus@comquent.de'
        JOB_NAME = 'docker-test'
        SSL_EMAIL = 'clemens.nikolaus@comquent.de'
        DOMAIN = "${params.DOMAIN}"
        CONFIG_REPO = "${params.CONFIG_REPO}"
    }
    stages {
        stage('Checkout Workspace') {
            steps {
                git branch: 'main', url: 'https://github.com/cqNikolaus/jenkins_automation.git'
            }
        }
        stage('Setup Environment') {
            steps {
                withCredentials([
                    sshUserPrivateKey(credentialsId: 'ssh-private-key', keyFileVariable: 'H_SSH_PRIVATE_KEY'),
                    usernamePassword(credentialsId: 'jenkins-admin-credentials', usernameVariable: 'JENKINS_USER', passwordVariable: 'JENKINS_PASS'),
                    string(credentialsId: 'hetzner-api-token', variable: 'H_API_TOKEN'),
                    string(credentialsId: 'hetzner-dns-api-token', variable: 'H_DNS_API_TOKEN')
                ]) {
                    script {
                        def branchParam = params.BRANCH ?: ''
                        def branchOption = branchParam ? "--branch ${branchParam}" : ""
                        def command = """
                            set -e
                            echo "Setting up the environment with DOMAIN=${env.DOMAIN}"
                            pip install -e .
                            python scripts/create_environment.py --config-repo ${env.CONFIG_REPO} ${branchOption}
                        """
                        sh command
                    }
                }
            }
        }
    }
}
